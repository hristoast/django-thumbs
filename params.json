{"name":"Django-thumbs","tagline":"Fork of django-thumbs (http://djangothumbnails.com/) for Python 3","body":"![Django-thumbs logo](djangothumbs.jpg)\r\n# Django-thumbs\r\n----\r\n\r\nDjango-thumbs is the easiest way to create thumbnails for your ImageFields with Django.\r\nYou can integrate it easily in your code and it works with any StorageBackend. \r\n\r\n## Features\r\n----\r\n\r\n * Easy to integrate in your code (no database changes, works as an ImageField)\r\n * Works perfectly with any StorageBackend\r\n * Generates thumbnails after image is uploaded into memory\r\n * Deletes thumbnails when the image file is deleted\r\n * Provides easy access to the thumbnails' URLs (similar method as with ImageField)\r\n\r\n## Installation\r\n\r\n 1. Download `thumbs.py`\r\n 1. Import it in your _models.py_ and replace `ImageField` with `ImageWithThumbsField` in your model\r\n 1. Add a `sizes` attribute with a list of sizes you want to use for the thumbnails \r\n 1. Make sure your have defined `MEDIA_URL` or `STATIC_URL` in your settings.py\r\n 1. That's it!\r\n\r\n## Working Example\r\n\r\n_models.py_\r\n\r\n    from django.db import models\r\n    from thumbs import ImageWithThumbsField\r\n\r\n    class Person(models.Model):\r\n        photo = ImageWithThumbsField(upload_to='images', sizes=((125,125),(200,200)))\r\n        second_photo = ImageWithThumbsField(upload_to='images')\r\n\r\nIn this example we have a `Person` model with 2 image fields.\r\n\r\nYou can see the field `second_photo` doesn't have a sizes attribute. This field works exactly the same way as a normal `ImageField`.\r\n\r\nThe field `photo` has a `sizes` attribute specifying desired sizes for the thumbnails. This field works the same way as `ImageField` but it also creates the desired thumbnails when uploading a new file and deletes the thumbnails when deleting the file.\r\n\r\nWith `ImageField` you retrieve the URL for the image with: `someone.photo.url` With `ImageWithThumbsField` you retrieve it the same way. You also retrieve the URL for every thumbnail specifying its size: In this example we use `someone.photo.url_125x125` and `someone.photo.url_200x200` to get the URL of both thumbnails. \r\n\r\n## Uninstall\r\n\r\nAt any time you can go back and use `ImageField` again without altering the database or anything else. Just replace `ImageWithThumbsField` with `ImageField` again and make sure you delete the `sizes` attribute. Everything will work the same way it worked before using django-thumbs. Just remember to delete generated thumbnails in the case you don't want to have them anymore. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}